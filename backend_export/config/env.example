# Variables de Entorno para el Backend del Asistente

# Clave API de OpenAI (Obligatoria)
# Puede ser OPENAI_API_KEY o NEXT_PUBLIC_OPENAI_API_KEY si se lee desde el proceso de Next.js
OPENAI_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
# o
# NEXT_PUBLIC_OPENAI_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# ID del Asistente de OpenAI configurado para usar herramientas (Obligatorio)
# Puede ser OPENAI_ASSISTANT_ID o NEXT_PUBLIC_OPENAI_ASSISTANT_ID
# (Nota: el código de api_chat_route.ts no parece usar un ID de asistente explícito,
# sino que define las herramientas directamente en la llamada a la API de Chat Completions.
# Si se usara la API de Asistentes, este ID sería crucial.)
# OPENAI_ASSISTANT_ID="asst_xxxxxxxxxxxxxxxxxxxxxxxx"

# URL del servidor MCP Mock (Opcional, para desarrollo/pruebas)
# Usado si USE_OPEN_METEO no es 'true' y el código está configurado para llamar a este endpoint.
# El código de api_chat_route.ts usa MCP_SERVER_URL para el mock.
MCP_SERVER_URL="http://localhost:3001"

# Usar Open-Meteo directamente (Opcional)
# Si se establece a 'true', la herramienta de clima intentará llamar directamente a Open-Meteo,
# saltándose la lógica del MCP_SERVER_URL para el clima.
USE_OPEN_METEO="false"
